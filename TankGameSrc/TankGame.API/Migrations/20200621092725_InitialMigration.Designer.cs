// <auto-generated />
using System;
using TankGame.API.Dbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace TankGame.API.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20200621092725_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TankGame.API.Entities.GameBattle", b =>
                {
                    b.Property<int>("GameBattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BlueTankModelId")
                        .HasColumnType("integer");

                    b.Property<int>("BlueTankX")
                        .HasColumnType("integer");

                    b.Property<int>("BlueTankY")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GameMapId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("RedTankModelId")
                        .HasColumnType("integer");

                    b.Property<int>("RedTankX")
                        .HasColumnType("integer");

                    b.Property<int>("RedTankY")
                        .HasColumnType("integer");

                    b.HasKey("GameBattleId");

                    b.HasIndex("BlueTankModelId");

                    b.HasIndex("GameMapId");

                    b.HasIndex("RedTankModelId");

                    b.ToTable("GameBattles");
                });

            modelBuilder.Entity("TankGame.API.Entities.GameMap", b =>
                {
                    b.Property<int>("GameMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Map")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NoObstacles")
                        .HasColumnType("integer");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("GameMapId");

                    b.ToTable("GameMaps");
                });

            modelBuilder.Entity("TankGame.API.Entities.GameSimulation", b =>
                {
                    b.Property<int>("GameSimulationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GameBattleId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Simulation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GameSimulationId");

                    b.HasIndex("GameBattleId");

                    b.ToTable("GameSimulations");
                });

            modelBuilder.Entity("TankGame.API.Entities.TankModel", b =>
                {
                    b.Property<int>("TankModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("GunPower")
                        .HasColumnType("double precision");

                    b.Property<int>("GunRange")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double>("ShieldLife")
                        .HasColumnType("double precision");

                    b.Property<int>("Speed")
                        .HasColumnType("integer");

                    b.Property<string>("TankModelDescription")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("TankModelName")
                        .IsRequired()
                        .HasColumnType("character varying(300)")
                        .HasMaxLength(300);

                    b.HasKey("TankModelId");

                    b.ToTable("TankModels");
                });

            modelBuilder.Entity("TankGame.API.Entities.GameBattle", b =>
                {
                    b.HasOne("TankGame.API.Entities.TankModel", "BlueTankModel")
                        .WithMany()
                        .HasForeignKey("BlueTankModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TankGame.API.Entities.GameMap", "GameMap")
                        .WithMany()
                        .HasForeignKey("GameMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TankGame.API.Entities.TankModel", "RedTankModel")
                        .WithMany()
                        .HasForeignKey("RedTankModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TankGame.API.Entities.GameSimulation", b =>
                {
                    b.HasOne("TankGame.API.Entities.GameBattle", "GameBattle")
                        .WithMany("Simulations")
                        .HasForeignKey("GameBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
